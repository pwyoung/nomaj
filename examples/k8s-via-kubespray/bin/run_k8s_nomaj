#!/bin/bash

# PURPOSE
# - Ensure the VMs are up, by re-running only the Vagrant step
#     nomaj -m vagrant
# - Create an SSH tunnel to the K8S "control-plane" node
#     ssh -f -N -L $host_port:localhost:$container_port $SSH_ALIAS
# - Create a Kube config file
#     ~/.kube/config.local
# - Test
#     KUBECONFIG=$HOME/.kube/config.local kubectl get all
#
# Requirements
# - Do NOT bind port 6443 on this host
#     since it will be used by the nginx-proxy
#     when this node joins the cluster
# - The nomaj repo is installed in ~/git/nomaj
#     cd ~/git/nomaj/examples/k8s-via-kubespray && make
# - "nomaj" is found in $PATH
#     e.g. ~/.bash_profile has
#     PATH=$PATH:~/git/nomaj
# - The nomaj job was run already
#     That job has added SSH alias "k-1" to ~/.ssh/config
#     The following works: "ssh k-1 hostname"
#     cd ~/git/nomaj/examples/k8s-via-kubespray && make

set -e

# SSH to this host (to get kubeconfig and for SSH tunnel to K8S API)
SSH_ALIAS="k-1"
container_port="6443"
# Moved this since nginx-proxy tries to bind to 6443
host_port="6444"


# Start the VMs comprising the K8S cluster.
# This assumes that the VMs were created and configured with K8S.
start_vms() {
    cd ~/git/nomaj/examples/k8s-via-kubespray
    if nomaj -m vagrant; then
        echo "Started VMs"
    else
        echo "Failed to start VMs"
        echo "Maybe you need to create the cluster with:"
        echo "  cd ~/git/nomaj/examples/k8s-via-kubespray && make"
        exit 1
    fi

    vagrant global-status
}

# _tunnel_to_k8s
# Make a tunnel from the host to the Master
# node (VM) in the nomaj K8S cluster
tunnel_to_k8s() {
    if ! ps eax | grep -v grep | grep "ssh -f -N -L $host_port:localhost:$container_port $SSH_ALIAS" | awk '{print $1}'; then
        echo "Start SSH tunnel"
        ssh -f -N -L $host_port:localhost:$container_port $SSH_ALIAS
    else
        echo "SSH Tunnel already exists"
    fi
    sleep 3
}

update_kube_config_local() {
    mkdir -p ~/.kube

    F1=~/.kube/config.local.temp
    ssh $SSH_ALIAS "sudo su - -c 'cat /root/.kube/config' 2>/dev/null" > $F1

    F2=~/.kube/config.local
    cat $F1 | perl -pe "s/6443/$host_port/g" > $F2
}

use_kube_config_local() {
    SEP="--------------------------------------------------------------------------------"
    echo "$SEP"
    echo "KUBECONFIG=$HOME/.kube/config.local kubectl config view"
    echo "$SEP"
    KUBECONFIG=$HOME/.kube/config.local kubectl config view
    echo ""
    echo ""
    echo ""

    echo "$SEP"
    echo "KUBECONFIG=$HOME/.kube/config.local kubectl get all,pv,pvc,secret --all-namespaces"
    echo "$SEP"
    KUBECONFIG=$HOME/.kube/config.local kubectl get all,pv,pvc,secret --all-namespaces

    return 0
}

start_vms
tunnel_to_k8s
update_kube_config_local
use_kube_config_local
