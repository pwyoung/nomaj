#!/usr/bin/env python3

# Notes:
# - This should work with no arguments.
# - The config file to use is ../config.yaml.
# - This should produce its output and perform operations
#   using the the current working directory

import os
import sys
import argparse
import yaml
from pathlib import Path

sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..')))
from lib.shellcmd import run_command

debug = True


class RunVagrant:
    def __init__(self):
        self.config_file = os.path.normpath(os.path.join(os.getcwd(),
                                                         "..",
                                                         "config.yaml"))
        self.script_dir = os.path.dirname(os.path.realpath(__file__))  # Path to this script

    def run_vagrant(self):
        vagrant_file_creator = os.path.normpath(os.path.join(self.script_dir,
                                                             "create-vagrantfile",
                                                             "create-vagrantfile.py"))
        vagrant_template_dir = os.path.normpath(os.path.join(self.script_dir,
                                                             "create-vagrantfile",
                                                             "templates"))
        vagrant_file = os.path.normpath(os.path.join(os.getcwd(),
                                                     "Vagrantfile"))

        # Create the Vagrantfile
        cmd = vagrant_file_creator
        cmd += " -c " + self.config_file
        cmd += " -t " + vagrant_template_dir
        cmd += " -v " + vagrant_file
        run_command(cmd)

        # Bring up Vagrant Boxes
        cmd = "vagrant up"
        run_command(cmd)

        # Show status
        cmd = "vagrant status"
        run_command(cmd)

    def update_ssh_config(self):
        """ Update ~/.ssh to allow connection to Vagrant boxes
        """
        # Install requirements
        ansible_requirements = os.path.normpath(os.path.join(self.script_dir,
                                                             "update-ssh-config-from-vagrant",
                                                             "requirements.yml"))
        cmd = "ansible-galaxy install -r " + ansible_requirements + " -f "
        run_command(cmd)

        # Run the playbook
        ansible_playbook = os.path.normpath(os.path.join(self.script_dir,
                                                         "update-ssh-config-from-vagrant",
                                                         "playbook.yaml"))
        vagrant_dir = os.getcwd()
        cmd = "ansible-playbook"
        cmd += " --connection=local"
        cmd += " --inventory 127.0.0.1,"
        cmd += " " + ansible_playbook
        extra_vars = '-e vagrant_dir=' + vagrant_dir
        extra_vars += ' -e sshconfig=~/.ssh/config'
        extra_vars += ' -e sshconfig_backup=~/.ssh/config.BAK'
        cmd += " '" + extra_vars + "'"
        run_command(cmd)


def main(argv):
    app = RunVagrant()
    app.run_vagrant()
    app.update_ssh_config()


if __name__ == "__main__":
    main(sys.argv[1:])
