---
# https://github.com/kubernetes-sigs/kubespray
# https://github.com/kubernetes-sigs/kubespray#requirements
# Latest K8S version:
#   https://kubernetes.io/releases/
#   To bump, update the Ansible Playbook that runs Kubespray, below:
#     "ansible-playbook-deploy-kubespray" https://github.com/pwyoung/ansible-playbook-deploy-kubespray.git"
#   Older versions can be selected via the parameter here:
#     https://github.com/kubernetes-sigs/kubespray/blob/master/inventory/sample/group_vars/k8s_cluster/k8s-cluster.yml#L20
#   The Ansible role needs to be updated here:
#     https://github.com/pwyoung/ansible-playbook-deploy-kubespray/blob/master/roles/install-kubespray/defaults/main.yml
generic:
  project_namespace: k8s-via-kubespray

vagrant:
  boxes:
    - name: k-1
    - name: k-2
    - name: k-3
    - name: k-4
    - name: k-5
  global:
    memory: 4096
    cpus: 2
    boot_timeout: 300
    nvme_disks:
      data0:
        size: 102400
      data1:
        size: 102400
    virtualbox_cfg:
      enabled: True # If not true then omit from Vagrantfile
      box: 'generic/ubuntu2204'
      enable_sse4: true
      nvme_disk_postfix: 'vdi' # can be vdi, vmdk, vhd
      nvme_disk_path: '.vagrant/nvme_disks/' # Default to a path relative to the Vagrantfile (common for VirtualBox)
      nvme_disk_prefix: 'nvme_disk'
      append_project_name_to_nvme_disk_path: 'true'
    libvirt_cfg:
      enabled: True # If not true then omit from Vagrantfile
      box: 'generic/ubuntu2204'
      machine_type: 'q35'
      nvme_disk_postfix: 'qcow2'
      nvme_disk_id_prefix: 'drv'
      3emulator_path: '/usr/bin/qemu-system-x86_64'
      #nvme_disk_path: '$HOME/.local/share/libvirt/images/'
      nvme_disk_path: 'images/'
      append_project_name_to_nvme_disk_path: 'true'

ansible:
  roles:
    - name: "ansible-role-mount-disks"
      src: "https://github.com/pwyoung/ansible-role-mount-disks.git"
      scm: "git"
      version: "v1.0"
    - name: "create_partition"
      src: "https://github.com/mcgrof/create_partition.git"
      scm: "git"
      version: "v1.2.1"
  playbooks:
    - name: "ansible-playbook-deploy-kubespray"
      scm: "git"
      src: "https://github.com/pwyoung/ansible-playbook-deploy-kubespray.git"
      version: "ks-v2.23.0"
  inventory:
    all:
      vars:
        ansible_python_interpreter: "/usr/bin/python3"
      hosts:
        k-1:
        k-2:
        k-3:
        k-4:
        k-5:
      children:
        kube-master:
          hosts:
            k-1:
            k-2:
        kube-k:
          hosts:
            k-1:
            k-2:
            k-3:
            k-4:
            k-5:
        etcd:
          hosts:
            k-1:
            k-2:
            k-3:
        k8s-cluster:
          children:
            kube-master:
            kube-k:
        calico-rr:
          hosts: {}
  extra_vars:
    #################################################################################
    # Kubespray generic/download parameters:
    #   Notes:
    #     This has things like helm_version which is not listed in roles/kubernetes-apps/helm/defaults/main.yml
    #   URL:
    #     https://github.com/kubernetes-sigs/kubespray/blob/master/roles/download/defaults/main.yml
    #################################################################################
    # Helm
    #   https://github.com/kubernetes-sigs/kubespray/blob/master/roles/kubernetes-apps/helm/defaults/main.yml
    helm_enabled: true
    #################################################################################
    # You can set other Kubespray variables too, such as:
    #
    # kubespray_ingress_nginx_enabled
    # dns_cores_per_replica
    # dns_nodes_per_replica
    # populate_inventory_to_hosts_file=false
    # dns_mode
    # cluster_name
    # kube_network_plugin
    #################################################################################
    # Local Volumes
    #   https://github.com/kubernetes-sigs/kubespray/tree/master/roles/kubernetes-apps/external_provisioner/local_volume_provisioner
    local_volume_provisioner_enabled: true
    local_volume_provisioner_storage_classes:
      local-storage:
        host_dir: /mnt/disks
        mount_dir: /mnt/disks
    #################################################################################
    # Partition and mount disks using https://github.com/pwyoung/ansible-role-mount-disks
    #
    # kubespray_ingress_nginx_enabled
    # dns_cores_per_replica
    # dns_nodes_per_replica
    # populate_inventory_to_hosts_file=false
    # dns_mode
    # cluster_name
    # kube_network_plugin
    #################################################################################
    # Local Volumes
    #   https://github.com/kubernetes-sigs/kubespray/tree/master/roles/kubernetes-apps/external_provisioner/local_volume_provisioner
    local_volume_provisioner_enabled: true
    local_volume_provisioner_storage_classes:
      local-storage:
        host_dir: /mnt/disks
        mount_dir: /mnt/disks
    #################################################################################
    # Partition and mount disks using https://github.com/pwyoung/ansible-role-mount-disks
    create_partition_data:
      defaults:
            disk_setup_fstype: "xfs"
            disk_setup_label: "truncated"
            disk_setup_fs_opts: "-L truncated"
            disk_setup_user: "vagrant"
            disk_setup_group: "vagrant"
      create_partitions:
        -   disk_setup_device: "/dev/nvme0n1"
            disk_setup_path: "/mnt/disks/disk_0"
        -   disk_setup_device: "/dev/nvme1n1"
            disk_setup_path: "/mnt/disks/disk_1"
        #-   disk_setup_device: "/dev/nvme2n1"
        #    disk_setup_path: "/mnt/disks/disk_2"
        #-   disk_setup_device: "/dev/nvme3n1"
        #    disk_setup_path: "/mnt/disks/disk_3"
        #-   disk_setup_device: "/dev/nvme4n1"
        #    disk_setup_path: "/mnt/disks/disk_4"
