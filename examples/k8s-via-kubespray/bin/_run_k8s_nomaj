#!/bin/bash

# GOAL
#   Create a helper script to run K8S locally
#
# Assumptions
#   Nomaj is in ~/git/nomaj

set -e

# SSH to this host (to get kubeconfig and for SSH tunnel to K8S API)
SSH_ALIAS="k-1"
container_port="6443"
host_port="6443"


# Start the VMs comprising the K8S cluster.
# This assumes that the VMs were created and configured with K8S.
start_vms() {
    cd ~/git/nomaj/examples/k8s-via-kubespray
    if nomaj -m vagrant; then
        echo "Started VMs"
    else
        echo "Failed to start VMs"
        echo "Maybe you need to create the cluster with:"
        echo "  cd ~/git/nomaj/examples/k8s-via-kubespray && make"
        exit 1
    fi

    vagrant global-status
}

# _tunnel_to_k8s
# Make a tunnel from the host to the Master
# node (VM) in the nomaj K8S cluster
tunnel_to_k8s() {
    if ! ps eax | grep -v grep | grep "PID_ID_TAG='nomaj-ssh-tunnel'"; then
        echo "Start tunnel"
        export PID_ID_TAG='nomaj-ssh-tunnel' && ssh -f -N -L $host_port:localhost:$container_port $SSH_ALIAS
    else
        echo "Tunnel is running"
    fi
}

update_kube_config_local() {
    mkdir -p ~/.kube
    ssh $SSH_ALIAS "sudo su - -c 'cat /root/.kube/config' 2>/dev/null" > ~/.kube/config.local
}

use_kube_config_local() {
    SEP="--------------------------------------------------------------------------------"
    echo "$SEP"
    echo "KUBECONFIG=$HOME/.kube/config.local kubectl config view"
    echo "$SEP"
    KUBECONFIG=$HOME/.kube/config.local kubectl config view
    echo ""
    echo ""
    echo ""

    echo "$SEP"
    echo "KUBECONFIG=$HOME/.kube/config.local kubectl get all,pv,pvc,secret --all-namespaces"
    echo "$SEP"
    KUBECONFIG=$HOME/.kube/config.local kubectl get all,pv,pvc,secret --all-namespaces

    return 0
}


start_vms
tunnel_to_k8s
update_kube_config_local
use_kube_config_local
